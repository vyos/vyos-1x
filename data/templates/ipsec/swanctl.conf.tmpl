# Created by VyOS - manual changes will be overwritten

{% import 'ipsec/swanctl/profile.tmpl' as profile_tmpl %}
{% import 'ipsec/swanctl/peer.tmpl' as peer_tmpl %}

{% if profile is defined or site_to_site is defined %}
connections {
{%    if profile is defined %}
{%        for name, profile_conf in profile.items() if profile_conf.disable is not defined and profile_conf.bind is defined and profile_conf.bind.tunnel is defined %}
{%            set dmvpn_ike = ike_group[profile_conf.ike_group] %}
{%            set dmvpn_esp = esp_group[profile_conf.esp_group] %}
{{            profile_tmpl.conn(name, profile_conf, dmvpn_ike, dmvpn_esp, ciphers) }}
{%        endfor %}
{%    endif %}
{%    if site_to_site is defined and site_to_site.peer is defined %}
{%        for peer, peer_conf in site_to_site.peer.items() if peer not in dhcp_no_address and peer_conf.disable is not defined %}
{%            set peer_conn_name = peer.replace(".", "-").replace("@", "") %}
{%            set peer_ike = ike_group[peer_conf.ike_group] %}
{%            set peer_esp = esp_group[peer_conf.default_esp_group] if peer_conf.default_esp_group is defined else None %}
{%            set auth_type = authby[peer_conf.authentication.mode] %}
{{            peer_tmpl.conn(peer_conn_name, peer, peer_conf, peer_ike, peer_esp, ciphers, esp_group, auth_type, marks) }}
{%        endfor %}
{%    endif %}
}

secrets {
{%    if profile is defined %}
{%        for name, profile_conf in profile.items() if profile_conf.disable is not defined and profile_conf.bind is defined and profile_conf.bind.tunnel is defined %}
{%            if profile_conf.authentication.mode == 'pre-shared-secret' %}
{%                for interface in profile_conf.bind.tunnel %}
    ike-dmvpn-{{ interface }} {
        secret = {{ profile_conf.authentication.pre_shared_secret }}
    }
{%                endfor %}
{%            endif %}
{%        endfor %}
{%    endif %}
{%    if site_to_site is defined and site_to_site.peer is defined %}
{%        for peer, peer_conf in site_to_site.peer.items() if peer not in dhcp_no_address and peer_conf.disable is not defined %}
{%            set peer_conn_name = peer.replace(".", "-").replace("@", "") %}
{%            if peer_conf.authentication.mode == 'pre-shared-secret' %}
    ike-{{ peer_conn_name }} {
{%                if peer_conf.local_address is defined %}
        id-local = {{ peer_conf.local_address }} # dhcp:{{ peer_conf.dhcp_interface if 'dhcp_interface' in peer_conf else 'no' }}
{%                endif %}
        id-remote = {{ peer }}
{%                if peer_conf.authentication.id is defined %}
        id-localid = {{ peer_conf.authentication.id }}
{%                endif %}
{%                if peer_conf.authentication.remote_id is defined %}
        id-remoteid = {{ peer_conf.authentication.remote_id }}
{%                endif %}
        secret = "{{ peer_conf.authentication.pre_shared_secret }}"
    }
{%            elif peer_conf.authentication.mode == 'x509' %}
{%                set key_file = peer_conf.authentication.x509.key.file %}
    private-{{ peer_conn_name }} {
        file = {{ key_file if key_file.startswith(x509_path) else (x509_path + key_file) }}
{%                if "password" in peer_conf.authentication.x509.key and peer_conf.authentication.x509.key.password %}
        secret = "{{ peer_conf.authentication.x509.key.password}}"
{%                endif %}
    }
{%            elif peer_conf.authentication.mode == 'rsa' and not ns.local_key_set %}
{%                set ns.local_key_set = True %}
    private-local {
        file = {{ rsa_local_key }}
    }
{%            endif %}
{%        endfor %}
{%    endif %}
}
{% endif %}
