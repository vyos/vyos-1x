{% macro render_config(host, address, web_options, ip_suffixes=['']) %}
{# Address: use=if, if=ethX, usev6=ifv6, ifv6=ethX, usev6=webv6, webv6=https://v6.example.com #}
{% for ipv in ip_suffixes %}
use{{ ipv }}={{ address if address == 'web' else 'if' }}{{ ipv }}, \
{%     if address == 'web' %}
{%         if web_options.url is vyos_defined %}
web{{ ipv }}={{ web_options.url }}, \
{%         endif %}
{%         if web_options.skip is vyos_defined %}
web-skip{{ ipv }}='{{ web_options.skip }}', \
{%         endif %}
{%     else %}
if{{ ipv }}={{ address }}, \
{%     endif %}
{% endfor %}
{# Other service options #}
{% for k,v in kwargs.items() %}
{%     if v is vyos_defined %}
{{ k }}={{ v }}{{ ',' if not loop.last }} \
{%     endif %}
{% endfor %}
{# Actual hostname for the service #}
{{ host }}
{% endmacro %}
### Autogenerated by dns_dynamic.py ###
daemon={{ timeout }}
syslog=yes
ssl=yes
pid={{ config_file | replace('.conf', '.pid') }}
cache={{ config_file | replace('.conf', '.cache') }}
{# ddclient default (web=dyndns) doesn't support ssl and results in process lockup #}
web=googledomains
{# ddclient default (use=ip) results in confusing warning message in log #}
use=no

{% if address is vyos_defined %}
{%     for address, service_cfg in address.items() %}
{%         if service_cfg.rfc2136 is vyos_defined %}
{%             for name, config in service_cfg.rfc2136.items() %}
{%                 if config.description is vyos_defined %}

# {{ config.description }}
{%                 endif %}
{%                 for host in config.host_name if config.host_name is vyos_defined %}

# RFC2136 dynamic DNS configuration for {{ name }}: [{{ config.zone }}, {{ host }}]
{# Don't append 'new-style' compliant suffix ('usev4', 'usev6', 'ifv4', 'ifv6' etc.)
   to the properties since 'nsupdate' doesn't support that yet. #}
{{ render_config(host, address, service_cfg.web_options,
                 protocol='nsupdate', server=config.server, zone=config.zone,
                 password=config.key, ttl=config.ttl) }}

{%                 endfor %}
{%             endfor %}
{%         endif %}
{%         if service_cfg.service is vyos_defined %}
{%             for name, config in service_cfg.service.items() %}
{%                 if config.description is vyos_defined %}

# {{ config.description }}
{%                 endif %}
{%                 for host in config.host_name if config.host_name is vyos_defined %}
{%                     set ip_suffixes = ['v4', 'v6'] if config.ip_version == 'both'
<<<<<<< HEAD
                                                      else (['v6'] if config.ip_version == 'ipv6' else ['']) %}
=======
                                                      else [config.ip_version[2:]] %}

>>>>>>> 9bb46a470 (ddclient: T5612: Generate more reliable ddclient config)
# Web service dynamic DNS configuration for {{ name }}: [{{ config.protocol }}, {{ host }}]
{# For ipv4 only setup or legacy ipv6 setup, don't append 'new-style' compliant suffix
   ('usev4', 'ifv4', 'webv4' etc.) to the properties and instead live through the
   deprecation warnings for better compatibility with most ddclient protocols. #}
{{ render_config(host, address, service_cfg.web_options, ip_suffixes,
                 protocol=config.protocol, server=config.server, zone=config.zone,
                 login=config.username, password=config.password) }}

{%                 endfor %}
{%             endfor %}
{%         endif %}
{%     endfor %}
{% endif %}
